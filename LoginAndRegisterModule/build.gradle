if (IsBuildMudle.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}


//android配置
def config = rootProject.ext.android

//相关库依赖
def librarys = rootProject.ext.supportDependencies

android {

    compileSdkVersion config.compileSdkVersion
    buildToolsVersion config.buildToolsVersion

    //compileSdkVersion 30
    //buildToolsVersion "30.0.2"


    defaultConfig {
        applicationId "com.shay.loginandregistermodule"
        //minSdkVersion 23
        //targetSdkVersion 30
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion

        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {

            annotationProcessorOptions {

                arguments = [moduleName: project.getName()]

            }
        }

    }


    /*java插件引入了一个概念叫做SourceSets，通过修改SourceSets中的属性，可以指定哪些源文件
 （或文件夹下的源文件）要被编译，哪些源文件要被排除。*/
    sourceSets {
        main {
            if (IsBuildMudle.toBoolean()) {
                manifest.srcFile 'src/main/application/AndroidManifest.xml'

            } else {
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
                java {
                    //排除java/debug文件夹下的所有文件
                    exclude '*module'
                }
            }
        }
    }

    //解决资源冲突
    resourcePrefix "loginmodule_"

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


    compileOptions {

        sourceCompatibility JavaVersion.VERSION_1_8

        targetCompatibility JavaVersion.VERSION_1_8

    }

    //记得注释掉
    splits {
        abi {
            enable true
            reset()
            include 'x86', 'armeabi-v7a', 'x86_64'
            universalApk true
        }
    }

}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //基础模块
    implementation project(':BaseLibrary')
//////////

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    annotationProcessor 'com.github.mzule.activityrouter:compiler:1.1.7'

    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //在这里使用库的依赖
    implementation librarys.supportAppcompat
    implementation librarys.supportV4
    implementation librarys.suppoutDesign

    // implementation rootProject.ext.dependencies["别名"]
    //implementation rootProject.ext.dependencies['butterknife']
    //annotationProcessor rootProject.ext.dependencies['butterknife-compiler']

    implementation 'com.jakewharton:butterknife:10.0.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.0.0'

    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    //retrofit添加Json解析返回数据
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'

    implementation 'io.reactivex.rxjava2:rxjava:2.1.3'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'

    //ui库
    implementation 'com.qmuiteam:qmui:2.0.0-alpha10'
    //微博sdk
    implementation 'com.sina.weibo.sdk:core:9.12.0:openDefaultRelease@aar'

    //Aroute
    annotationProcessor 'com.alibaba:arouter-compiler:1.1.4'
    implementation 'com.alibaba:arouter-api:1.3.1'
}
